#pragma once
#ifndef FLIMSPRITE_H
#define FLIMSPRITE_H

#include "err.h"
#include "AzulCore.h"

typedef enum SpriteParam
{
	sprite_x,
	sprite_y
} SpriteParam;

class FlimSprite : public Align16
{
public:
	FlimSprite(); // make an empty guy
	FlimSprite(const FlimSprite&) = default;
	FlimSprite& operator=(const FlimSprite&) = default;
	~FlimSprite();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	FlimSprite::FlimSprite(const char* imageName);
	///
	/// \brief	Constructor.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \par Make a sprite with a key that was loaded by the image manager
	/// \code
	/// 	 
	/// 	 ImageManager::Load("COOLSPRITE", "coolSprite.tga");
	/// 	 FlimSprite* coolSprite = new FlimSprite("COOLSPRITE");
	/// 	 
	/// \endcode
	///
	/// \param	imageName	Name of the image.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	FlimSprite(const char* imageName);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	errcode FlimSprite::SetAngle(float angle);
	///
	/// \brief	Sets an angle.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \param	angle	The angle.
	///
	/// \par Sets the angle in degrees of the sprite's rotation.
	/// 	 
	/// \code
	/// 	 
	/// 	 sprite->SetAngle(90.0f);
	/// 	 
	/// \endcode
	/// 
	/// \return	An errcode.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	errcode SetAngle(float angle);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	float FlimSprite::GetAngle();
	///
	/// \brief	Gets the angle.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \return	The angle.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	float GetAngle();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	errcode FlimSprite::SetScale(float x, float y);
	///
	/// \brief	Sets a scale.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \param	x	The x coordinate.
	/// \param	y	The y coordinate.
	///
	/// \return	An errcode.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	errcode SetScale(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	errcode FlimSprite::SetScale(float factor);
	///
	/// \brief	Sets a scale.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \param	factor	The factor.
	///
	/// \return	An errcode.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	errcode SetScale(float factor);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	errcode FlimSprite::SetScale(float factor, SpriteParam s);
	///
	/// \brief	Sets a scale.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \param	factor	The factor.
	/// \param	s	  	The SpriteParam to process.
	///
	/// \return	An errcode.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	errcode SetScale(float factor, SpriteParam s);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	Vect& FlimSprite::GetScale();
	///
	/// \brief	Gets the scale.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \return	The scale.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Vect& GetScale();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	errcode FlimSprite::SetPos(float x, float y);
	///
	/// \brief	Sets a position.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	///
	/// \param	x	The x coordinate.
	/// \param	y	The y coordinate.
	/// \ingroup SPRITES
	/// \return	An errcode.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	errcode SetPos(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	Vect& FlimSprite::GetPos();
	///
	/// \brief	Gets the position.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \return	The position.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Vect& GetPos();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	errcode FlimSprite::SetCenter(float x, float y);
	///
	/// \brief	Sets a center.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// \ingroup SPRITES
	/// \param	x	The x coordinate.
	/// \param	y	The y coordinate.
	///
	/// \return	An errcode.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	errcode SetCenter(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	Vect& FlimSprite::GetCenter();
	///
	/// \brief	Gets the center.
	/// \ingroup SPRITES
	/// \author	Jack Campbell
	/// \date	3/13/2017
	/// 		
	///
	/// \return	The center.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Vect& GetCenter();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	errcode FlimSprite::Render();
	///
	/// \brief	Renders this sprite.
	///
	/// \author	Jack Campbell
	/// \date	3/13/2017
	///
	/// \return	An errcode.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	errcode Render();


	Vect GetSize() const;


private:
	GraphicsObject_Sprite* _sprite;

	float angle;
	Vect scale;
	Vect pos;
	Vect center;

};


#endif