#pragma once
#ifndef Timeline_H
#define Timeline_H

#include <map>
#include "AzulCore.h"
#include "snd_err.h"
#include "Timer.h"

class Alarmable;
class AudioCommand;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	Timeline
///
/// \brief	A queue of commands to be fired off on a timer.
///
/// \author	Jack Campbell
/// \date	6/1/2017
////////////////////////////////////////////////////////////////////////////////////////////////////

class Timeline
{
public:

	// big four
	Timeline();
	~Timeline();
	Timeline(const Timeline&) = delete;
	Timeline& operator=(const Timeline&) = delete;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	snd_err Timeline::Register(AudioCommand* cmd, int t);
	///
	/// \brief	Registers this object.
	///
	/// \author	Jack Campbell
	/// \date	6/1/2017
	///
	/// \param [in,out]	cmd	If non-null, the command.
	/// \param 		   	t  	The int to process.
	///
	/// \return	A snd_err.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	snd_err Register(AudioCommand* cmd, int t);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	snd_err Timeline::Deregister(AudioCommand* cmd);
	///
	/// \brief	Deregisters this object.
	///
	/// \author	Jack Campbell
	/// \date	6/1/2017
	///
	/// \param [in,out]	cmd	If non-null, the command.
	///
	/// \return	A snd_err.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	snd_err Deregister(AudioCommand* cmd);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	snd_err Timeline::RemovePlaylist(unsigned int instance);
	///
	/// \brief	Removes the playlist described by instance.
	///
	/// \author	Jack Campbell
	/// \date	6/1/2017
	///
	/// \param	instance	The instance.
	///
	/// \return	A snd_err.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	snd_err RemovePlaylist(unsigned int instance);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	snd_err Timeline::ProcessAlarms();
	///
	/// \brief	Process the alarms.
	///
	/// \author	Jack Campbell
	/// \date	6/1/2017
	///
	/// \return	A snd_err.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	snd_err ProcessAlarms();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	int Timeline::GetTime();
	///
	/// \brief	Gets the time.
	///
	/// \author	Jack Campbell
	/// \date	6/1/2017
	///
	/// \return	The time.
	////////////////////////////////////////////////////////////////////////////////////////////////////

	int GetTime();

private:
	Timer timer;
	friend class Alarmable;
	std::multimap<int, AudioCommand*> timeline;

};

#endif